# Standard
alias ls='ls --color=auto'
alias ll='ls -la --color=auto'
alias l1='ls -1 --color=auto'
alias lt='ls -ltra --color=auto'
alias l='ls -1a --color=auto'
alias c='clear'
alias tailf='tail -f'
alias tree='tree -shp --filelimit 100 '
alias nst='sudo netstat -an | grep LISTEN | grep'
alias myip='/usr/bin/curl v4.ifconfig.co/ip'
alias myip6='/usr/bin/curl v6.ifconfig.co/ip'
alias brc='. ~/.bashrc'
alias vbrc='vim ~/.bashrc && . ~/.bashrc'
alias va='vim ~/.aliases && . ~/.bashrc'
alias fn='find . -name':
alias rmpyc='find . -name "*.pyc" -delete'
alias pack='packer build -only=amazon-ebs -on-error=ask'
alias ps_aux='ps aux| grep -v grep | grep'
alias vch='netstat -nr inet | egrep -v "lo0|en0"; ps aux | grep openvpn | egrep -v "grep|sudo"'
sum_file_lines() { cat $1 | awk '{ SUM += $0} END { print SUM }'; }

e () { echo -n "$1" | base64;}
d () { echo -n "$1" | base64 --decode; echo; }
grp () {
    grep -RiIns $1 * .[^.]*;
}
grpf () {
    grep -riIln $1 *;
}
g () {
    curl -s http://ip-api.com/line/$1;
    curl -s http://api.ipstack.com/$1?access_key=d3b678491f682793cb5e8ec0bdb88a30 |jq;
}

# git aliases
configure_git_sign_nlt() {
    git config --global user.email pniemiec@noledgetech.com
    git config --global user.signingkey C5C45D49
}
configure_git() {
    git config --global user.signingkey 3B4AC37F0FE73F92
    git config --global gpg.program gpg2
    git config --global commit.gpgsign true
    git config --global core.editor vim
}
alias gc='git clone'
alias gb='git branch'
alias gs='git status'
alias gd='git diff'
alias gr='git rebase'
alias gp='git pull'
alias gf='git fetch'
alias gfp='git fetch && git pull'
alias ga='git add'
alias gl='git log --date=format:%c --pretty=format:"%h%x09%cd%x09%an:%x09%s"'
alias gt='git tag -s'
alias gcm='git commit -S -m'
alias gcma='git commit -S --amend -m'
alias gcman='git commit --amend --no-edit'
alias gco='git checkout'
alias gpo='git secrets && git push origin'
alias git_default_branch='git remote show origin | grep "HEAD branch" | cut -d ":" -f 2'
alias gitlab_vars='GITLAB_TOKEN=eEjSBtCHrLYcvUGcPJdJ && GITLAB_URL=gitlab.digital.homeoffice.gov.uk'

# Set prompt command
parse_git_branch() { git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'; }
aws_vault() { if [ -n "$AWS_VAULT" ]; then echo "($AWS_VAULT) "; fi; }
export PS1="\[`[ $? = 0 ] && X=2 || X=1; tput setaf $X`\]\[\033[34m\]\$(aws_vault)\[\033[32m\]\u@\t\[`tput sgr0`\]:\w/\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "

# make aliases
alias mb='make build'
alias mr='make run'
alias mt='make test'
alias ms='make start'
alias ml='make logs'
alias mp='make stop'
alias mkae='make'

# env
exenv () {
    # export $(cat $1 | grep -v ^# | grep -v ^// | xargs)
    set -o allexport
    . $1
    set +o allexport
}

# docker aliases
alias dp='docker ps --format="table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}"'
alias dpa='docker ps -a --format="table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}"'
alias di='docker images'
alias dl='docker logs'
alias dlf='docker logs -f'
alias dr='docker rm -v'
alias ds='docker stop'
alias dk='docker kill'
alias din='docker inspect'
alias dbt='docker build -t test .'
alias drt='docker run --rm -ti test'
alias drtv='docker run --rm -v $(pwd)/src:/src -ti test'
dsr () { docker stop $1 && docker rm $1; }
dkr () { docker kill $1 && docker rm $1; }
dri () { docker rmi -f $1 >/dev/null; }
dsh () { docker exec -i -t $1 /usr/bin/env sh -l; }
dbash () { docker exec -i -t $1 /usr/bin/env bash -l; }
dr_clear() { rm -rf /data/dcr/docker/registry/v2/repositories/$1; }
d_c() {
    docker rm -v `docker ps --filter status=exited -q 2>/dev/null` 2>/dev/null
    docker rmi `docker images --filter dangling=true -q 2>/dev/null` 2>/dev/null
    echo "cleaned"
}

# Docker-compose aliases
alias dco='docker-compose'
alias dcps='docker-compose ps'
alias dcrm='docker-compose rm -f'
alias dcb='docker-compose build'
alias dcd='docker-compose down'
alias dcu='docker-compose up'
alias dcud='docker-compose up -d'
alias dcub='docker-compose up --build'
alias dcubd='docker-compose up --build -d'
alias dcor='docker-compose down -t 1 && docker-compose up --build -d'
dcrb () {
    docker-compose run `cat docker-compose.yml |grep container_name |awk '{print $2}'` /bin/bash
}

# GPG aliases
alias gpg_get_public_key='gpg --armor --export pniemiec@noledgetech.com'
alias gpg_list_keys='gpg --list-keys'
alias gpg_decrypt='gpg -d'
alias gpg_add_public_key='gpg --import'
gpg_encrypt() { echo "$1" | gpg --encrypt --sign --armor -r pniemiec@noledgetech.com; }


# Set python environment
export PYTHONSTARTUP=~/.pythonstartup
alias vpst='vim ~/.pythonstartup'

add-ssh () {
    if [ -z "$SSH_AUTH_SOCK" ] ; then
        eval $(ssh-agent -s)
        ssh-add
    fi
}
